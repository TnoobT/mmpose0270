2022-07-28 02:53:35,000 - mmpose - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.7 (default, Sep 16 2021, 13:09:58) [GCC 7.5.0]
CUDA available: True
GPU 0,1,2,3: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda-11.1:/usr/local/cuda-11.1:
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.9.1+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.10.1+cu111
OpenCV: 4.5.5
MMCV: 1.5.1
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 11.1
MMPose: 0.27.0+44cbd37
------------------------------------------------------------

2022-07-28 02:53:35,001 - mmpose - INFO - Distributed training: True
2022-07-28 02:53:38,409 - mmpose - INFO - Config:
checkpoint_config = dict(interval=10)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
log_level = 'INFO'
load_from = None
resume_from = None
dist_params = dict(backend='nccl')
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
dataset_info = dict(
    dataset_name='mpii',
    paper_info=dict(
        author=
        'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
        title=
        '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
        container=
        'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
        year='2014',
        homepage='http://human-pose.mpi-inf.mpg.de/'),
    keypoint_info=dict({
        0:
        dict(
            name='right_ankle',
            id=0,
            color=[255, 128, 0],
            type='lower',
            swap='left_ankle'),
        1:
        dict(
            name='right_knee',
            id=1,
            color=[255, 128, 0],
            type='lower',
            swap='left_knee'),
        2:
        dict(
            name='right_hip',
            id=2,
            color=[255, 128, 0],
            type='lower',
            swap='left_hip'),
        3:
        dict(
            name='left_hip',
            id=3,
            color=[0, 255, 0],
            type='lower',
            swap='right_hip'),
        4:
        dict(
            name='left_knee',
            id=4,
            color=[0, 255, 0],
            type='lower',
            swap='right_knee'),
        5:
        dict(
            name='left_ankle',
            id=5,
            color=[0, 255, 0],
            type='lower',
            swap='right_ankle'),
        6:
        dict(name='pelvis', id=6, color=[51, 153, 255], type='lower', swap=''),
        7:
        dict(name='thorax', id=7, color=[51, 153, 255], type='upper', swap=''),
        8:
        dict(
            name='upper_neck',
            id=8,
            color=[51, 153, 255],
            type='upper',
            swap=''),
        9:
        dict(
            name='head_top', id=9, color=[51, 153, 255], type='upper',
            swap=''),
        10:
        dict(
            name='right_wrist',
            id=10,
            color=[255, 128, 0],
            type='upper',
            swap='left_wrist'),
        11:
        dict(
            name='right_elbow',
            id=11,
            color=[255, 128, 0],
            type='upper',
            swap='left_elbow'),
        12:
        dict(
            name='right_shoulder',
            id=12,
            color=[255, 128, 0],
            type='upper',
            swap='left_shoulder'),
        13:
        dict(
            name='left_shoulder',
            id=13,
            color=[0, 255, 0],
            type='upper',
            swap='right_shoulder'),
        14:
        dict(
            name='left_elbow',
            id=14,
            color=[0, 255, 0],
            type='upper',
            swap='right_elbow'),
        15:
        dict(
            name='left_wrist',
            id=15,
            color=[0, 255, 0],
            type='upper',
            swap='right_wrist')
    }),
    skeleton_info=dict({
        0:
        dict(link=('right_ankle', 'right_knee'), id=0, color=[255, 128, 0]),
        1:
        dict(link=('right_knee', 'right_hip'), id=1, color=[255, 128, 0]),
        2:
        dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
        3:
        dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
        4:
        dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
        5:
        dict(link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
        6:
        dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
        7:
        dict(link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
        8:
        dict(link=('upper_neck', 'head_top'), id=8, color=[51, 153, 255]),
        9:
        dict(link=('upper_neck', 'right_shoulder'), id=9, color=[255, 128, 0]),
        10:
        dict(
            link=('right_shoulder', 'right_elbow'), id=10, color=[255, 128,
                                                                  0]),
        11:
        dict(link=('right_elbow', 'right_wrist'), id=11, color=[255, 128, 0]),
        12:
        dict(link=('upper_neck', 'left_shoulder'), id=12, color=[0, 255, 0]),
        13:
        dict(link=('left_shoulder', 'left_elbow'), id=13, color=[0, 255, 0]),
        14:
        dict(link=('left_elbow', 'left_wrist'), id=14, color=[0, 255, 0])
    }),
    joint_weights=[
        1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2, 1.0, 1.0,
        1.2, 1.5
    ],
    sigmas=[
        0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026, 0.026,
        0.062, 0.072, 0.179, 0.179, 0.072, 0.062
    ])
evaluation = dict(interval=10, metric='PCKh', save_best='PCKh')
optimizer = dict(type='AdamW', lr=0.0005)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[170, 200])
total_epochs = 210
channel_cfg = dict(
    num_output_channels=16,
    dataset_joints=16,
    dataset_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    inference_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
input_size = (256, 256)
ratio = 2
model = dict(
    type='TopDown',
    pretrained=
    'work_dirs/2_hm_shufflenetv2_mpii_256x256/best_PCKh_epoch_200.pth',
    backbone=dict(type='ShuffleNetV2', widen_factor=1.0),
    keypoint_head=dict(
        type='IntegralPoseRegressionHead2',
        in_channels=1024,
        num_joints=16,
        input_size=(256, 256),
        ratio=2,
        loss_keypoint=dict(
            type='DSNTRLE_SimC_Loss2',
            simc_param=dict(),
            rle_param=dict(
                use_target_weight=True, size_average=True, residual=True),
            rle_weight=1,
            simc_weight=1),
        out_sigma=True,
        out_highres=False,
        with_simcc=True),
    train_cfg=dict(with_simcc=True),
    test_cfg=dict(flip_test=True))
data_cfg = dict(
    image_size=[256, 256],
    heatmap_size=[64, 64],
    num_output_channels=16,
    num_joints=16,
    dataset_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    inference_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    use_gt_bbox=True,
    bbox_file=None)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownRandomFlip', flip_prob=0.5),
    dict(
        type='TopDownGetRandomScaleRotation', rot_factor=40, scale_factor=0.5),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(type='TopDownGenerateTargetRegression'),
    dict(type='TopDownGenerateSimC'),
    dict(
        type='Collect',
        keys=['img', 'target', 'target_weight', 'target_x', 'target_y'],
        meta_keys=[
            'image_file', 'joints_3d', 'joints_3d_visible', 'center', 'scale',
            'rotation', 'flip_pairs'
        ])
]
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='Collect',
        keys=['img'],
        meta_keys=['image_file', 'center', 'scale', 'rotation', 'flip_pairs'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='Collect',
        keys=['img'],
        meta_keys=['image_file', 'center', 'scale', 'rotation', 'flip_pairs'])
]
data_root = '/data/tfj/workspace/datasets/MPII'
data = dict(
    samples_per_gpu=64,
    workers_per_gpu=4,
    persistent_workers=True,
    val_dataloader=dict(samples_per_gpu=32),
    test_dataloader=dict(samples_per_gpu=32),
    train=dict(
        type='TopDownMpiiDataset',
        ann_file=
        '/data/tfj/workspace/datasets/MPII/annotations/mpii_train.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownRandomFlip', flip_prob=0.5),
            dict(
                type='TopDownGetRandomScaleRotation',
                rot_factor=40,
                scale_factor=0.5),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='TopDownGenerateTargetRegression'),
            dict(type='TopDownGenerateSimC'),
            dict(
                type='Collect',
                keys=[
                    'img', 'target', 'target_weight', 'target_x', 'target_y'
                ],
                meta_keys=[
                    'image_file', 'joints_3d', 'joints_3d_visible', 'center',
                    'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])),
    val=dict(
        type='TopDownMpiiDataset',
        ann_file='/data/tfj/workspace/datasets/MPII/annotations/mpii_val.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='Collect',
                keys=['img'],
                meta_keys=[
                    'image_file', 'center', 'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])),
    test=dict(
        type='TopDownMpiiDataset',
        ann_file='/data/tfj/workspace/datasets/MPII/annotations/mpii_val.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='Collect',
                keys=['img'],
                meta_keys=[
                    'image_file', 'center', 'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])))
work_dir = './work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc'
gpu_ids = range(0, 4)

2022-07-28 02:53:38,411 - mmpose - INFO - Set random seed to 2526, deterministic: False
2022-07-28 02:53:47,119 - mmpose - INFO - Start running, host: tianfj@qwe, work_dir: /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc
2022-07-28 02:53:47,120 - mmpose - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-07-28 02:53:47,120 - mmpose - INFO - workflow: [('train', 1)], max: 210 epochs
2022-07-28 02:53:47,120 - mmpose - INFO - Checkpoints will be saved to /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc by HardDiskBackend.
2022-07-28 02:54:11,640 - mmpose - INFO - Epoch [1][50/87]	lr: 4.945e-05, eta: 2:28:50, time: 0.490, data_time: 0.299, memory: 1599, reg_loss: 31.5580, 0: 31.4493, 1: 0.1087, acc_pose: 0.0760, loss: 31.5580
2022-07-28 02:54:50,994 - mmpose - INFO - Epoch [2][50/87]	lr: 1.364e-04, eta: 1:48:12, time: 0.491, data_time: 0.254, memory: 1599, reg_loss: -30.1919, 0: -30.2549, 1: 0.0630, acc_pose: 0.2860, loss: -30.1919
2022-07-28 02:55:30,741 - mmpose - INFO - Epoch [3][50/87]	lr: 2.233e-04, eta: 1:39:05, time: 0.495, data_time: 0.164, memory: 1599, reg_loss: -65.9917, 0: -66.0323, 1: 0.0406, acc_pose: 0.4959, loss: -65.9917
2022-07-28 02:56:11,905 - mmpose - INFO - Epoch [4][50/87]	lr: 3.102e-04, eta: 1:35:12, time: 0.502, data_time: 0.227, memory: 1599, reg_loss: -78.1541, 0: -78.1888, 1: 0.0346, acc_pose: 0.5647, loss: -78.1541
2022-07-28 02:56:51,984 - mmpose - INFO - Epoch [5][50/87]	lr: 3.971e-04, eta: 1:32:32, time: 0.495, data_time: 0.134, memory: 1599, reg_loss: -82.9091, 0: -82.9411, 1: 0.0320, acc_pose: 0.6094, loss: -82.9091
2022-07-28 02:57:31,286 - mmpose - INFO - Epoch [6][50/87]	lr: 4.840e-04, eta: 1:30:36, time: 0.492, data_time: 0.269, memory: 1599, reg_loss: -85.1850, 0: -85.2158, 1: 0.0307, acc_pose: 0.6276, loss: -85.1850
2022-07-28 02:58:10,366 - mmpose - INFO - Epoch [7][50/87]	lr: 5.000e-04, eta: 1:29:09, time: 0.493, data_time: 0.257, memory: 1599, reg_loss: -87.9138, 0: -87.9435, 1: 0.0296, acc_pose: 0.6503, loss: -87.9138
2022-07-28 02:58:49,294 - mmpose - INFO - Epoch [8][50/87]	lr: 5.000e-04, eta: 1:27:41, time: 0.480, data_time: 0.320, memory: 1599, reg_loss: -90.4207, 0: -90.4493, 1: 0.0285, acc_pose: 0.6668, loss: -90.4207
2022-07-28 02:59:29,022 - mmpose - INFO - Epoch [9][50/87]	lr: 5.000e-04, eta: 1:26:37, time: 0.488, data_time: 0.255, memory: 1599, reg_loss: -91.2805, 0: -91.3086, 1: 0.0281, acc_pose: 0.6637, loss: -91.2805
2022-07-28 03:00:08,215 - mmpose - INFO - Epoch [10][50/87]	lr: 5.000e-04, eta: 1:25:45, time: 0.491, data_time: 0.340, memory: 1599, reg_loss: -92.2887, 0: -92.3162, 1: 0.0275, acc_pose: 0.6766, loss: -92.2887
2022-07-28 03:00:22,953 - mmpose - INFO - Saving checkpoint at 10 epochs
2022-07-28 03:00:27,699 - mmpose - INFO - Now best checkpoint is saved as best_PCKh_epoch_10.pth.
2022-07-28 03:00:27,699 - mmpose - INFO - Best PCKh is 72.0062 at 10 epoch.
2022-07-28 03:00:27,699 - mmpose - INFO - Epoch(val) [10][24]	Head: 87.9945, Shoulder: 88.3662, Elbow: 72.9509, Wrist: 57.3595, Hip: 79.7127, Knee: 59.3788, Ankle: 45.6302, PCKh: 72.0062, PCKh@0.1: 12.2170
2022-07-28 03:00:51,487 - mmpose - INFO - Epoch [11][50/87]	lr: 5.000e-04, eta: 1:24:44, time: 0.476, data_time: 0.240, memory: 1599, reg_loss: -92.9349, 0: -92.9623, 1: 0.0274, acc_pose: 0.6857, loss: -92.9349
2022-07-28 03:01:29,592 - mmpose - INFO - Epoch [12][50/87]	lr: 5.000e-04, eta: 1:23:48, time: 0.474, data_time: 0.244, memory: 1599, reg_loss: -94.4300, 0: -94.4567, 1: 0.0267, acc_pose: 0.6882, loss: -94.4300
2022-07-28 03:02:07,240 - mmpose - INFO - Epoch [13][50/87]	lr: 5.000e-04, eta: 1:22:50, time: 0.466, data_time: 0.291, memory: 1599, reg_loss: -96.0734, 0: -96.0997, 1: 0.0263, acc_pose: 0.7004, loss: -96.0734
2022-07-28 03:02:45,097 - mmpose - INFO - Epoch [14][50/87]	lr: 5.000e-04, eta: 1:21:50, time: 0.456, data_time: 0.226, memory: 1599, reg_loss: -96.3719, 0: -96.3978, 1: 0.0259, acc_pose: 0.7008, loss: -96.3719
2022-07-28 03:03:23,571 - mmpose - INFO - Epoch [15][50/87]	lr: 5.000e-04, eta: 1:21:00, time: 0.463, data_time: 0.212, memory: 1599, reg_loss: -96.1947, 0: -96.2210, 1: 0.0263, acc_pose: 0.7030, loss: -96.1947
2022-07-28 03:04:01,726 - mmpose - INFO - Epoch [16][50/87]	lr: 5.000e-04, eta: 1:20:13, time: 0.462, data_time: 0.264, memory: 1599, reg_loss: -97.7636, 0: -97.7893, 1: 0.0257, acc_pose: 0.7013, loss: -97.7636
2022-07-28 03:04:39,988 - mmpose - INFO - Epoch [17][50/87]	lr: 5.000e-04, eta: 1:19:35, time: 0.472, data_time: 0.184, memory: 1599, reg_loss: -98.7983, 0: -98.8237, 1: 0.0254, acc_pose: 0.7108, loss: -98.7983
2022-07-28 03:05:17,513 - mmpose - INFO - Epoch [18][50/87]	lr: 5.000e-04, eta: 1:18:54, time: 0.464, data_time: 0.257, memory: 1599, reg_loss: -98.5889, 0: -98.6144, 1: 0.0255, acc_pose: 0.7115, loss: -98.5889
2022-07-28 03:05:55,398 - mmpose - INFO - Epoch [19][50/87]	lr: 5.000e-04, eta: 1:18:19, time: 0.471, data_time: 0.242, memory: 1599, reg_loss: -99.2321, 0: -99.2572, 1: 0.0251, acc_pose: 0.7165, loss: -99.2321
2022-07-28 03:06:33,121 - mmpose - INFO - Epoch [20][50/87]	lr: 5.000e-04, eta: 1:17:43, time: 0.469, data_time: 0.219, memory: 1599, reg_loss: -100.2152, 0: -100.2401, 1: 0.0249, acc_pose: 0.7311, loss: -100.2152
2022-07-28 03:06:47,209 - mmpose - INFO - Saving checkpoint at 20 epochs
2022-07-28 03:06:52,039 - mmpose - INFO - The previous best checkpoint /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc/best_PCKh_epoch_10.pth was removed
2022-07-28 03:06:52,109 - mmpose - INFO - Now best checkpoint is saved as best_PCKh_epoch_20.pth.
2022-07-28 03:06:52,109 - mmpose - INFO - Best PCKh is 75.6779 at 20 epoch.
2022-07-28 03:06:52,110 - mmpose - INFO - Epoch(val) [20][24]	Head: 91.3711, Shoulder: 90.1664, Elbow: 76.1379, Wrist: 62.5351, Hip: 81.5821, Knee: 64.5371, Ankle: 53.2351, PCKh: 75.6779, PCKh@0.1: 15.3318
2022-07-28 03:07:15,390 - mmpose - INFO - Epoch [21][50/87]	lr: 5.000e-04, eta: 1:17:08, time: 0.465, data_time: 0.221, memory: 1599, reg_loss: -99.4962, 0: -99.5214, 1: 0.0252, acc_pose: 0.7212, loss: -99.4962
2022-07-28 03:07:52,396 - mmpose - INFO - Epoch [22][50/87]	lr: 5.000e-04, eta: 1:16:30, time: 0.459, data_time: 0.278, memory: 1599, reg_loss: -100.3335, 0: -100.3582, 1: 0.0248, acc_pose: 0.7270, loss: -100.3335
2022-07-28 03:08:29,347 - mmpose - INFO - Epoch [23][50/87]	lr: 5.000e-04, eta: 1:15:54, time: 0.459, data_time: 0.212, memory: 1599, reg_loss: -100.9947, 0: -101.0193, 1: 0.0245, acc_pose: 0.7227, loss: -100.9947
2022-07-28 03:09:06,838 - mmpose - INFO - Epoch [24][50/87]	lr: 5.000e-04, eta: 1:15:20, time: 0.461, data_time: 0.352, memory: 1599, reg_loss: -101.2944, 0: -101.3188, 1: 0.0244, acc_pose: 0.7344, loss: -101.2944
2022-07-28 03:09:43,495 - mmpose - INFO - Epoch [25][50/87]	lr: 5.000e-04, eta: 1:14:46, time: 0.458, data_time: 0.364, memory: 1599, reg_loss: -101.4723, 0: -101.4968, 1: 0.0244, acc_pose: 0.7316, loss: -101.4723
2022-07-28 03:10:21,008 - mmpose - INFO - Epoch [26][50/87]	lr: 5.000e-04, eta: 1:14:14, time: 0.465, data_time: 0.269, memory: 1599, reg_loss: -101.4113, 0: -101.4354, 1: 0.0242, acc_pose: 0.7302, loss: -101.4113
2022-07-28 03:10:58,209 - mmpose - INFO - Epoch [27][50/87]	lr: 5.000e-04, eta: 1:13:41, time: 0.456, data_time: 0.248, memory: 1599, reg_loss: -101.7141, 0: -101.7383, 1: 0.0242, acc_pose: 0.7326, loss: -101.7141
2022-07-28 03:11:35,090 - mmpose - INFO - Epoch [28][50/87]	lr: 5.000e-04, eta: 1:13:08, time: 0.455, data_time: 0.351, memory: 1599, reg_loss: -102.1501, 0: -102.1744, 1: 0.0242, acc_pose: 0.7259, loss: -102.1501
2022-07-28 03:12:11,817 - mmpose - INFO - Epoch [29][50/87]	lr: 5.000e-04, eta: 1:12:34, time: 0.449, data_time: 0.139, memory: 1599, reg_loss: -102.6720, 0: -102.6958, 1: 0.0238, acc_pose: 0.7333, loss: -102.6720
2022-07-28 03:12:48,653 - mmpose - INFO - Epoch [30][50/87]	lr: 5.000e-04, eta: 1:12:05, time: 0.464, data_time: 0.164, memory: 1599, reg_loss: -102.4721, 0: -102.4961, 1: 0.0239, acc_pose: 0.7343, loss: -102.4721
2022-07-28 03:13:02,516 - mmpose - INFO - Saving checkpoint at 30 epochs
2022-07-28 03:13:18,291 - mmpose - INFO - The previous best checkpoint /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc/best_PCKh_epoch_20.pth was removed
2022-07-28 03:13:18,363 - mmpose - INFO - Now best checkpoint is saved as best_PCKh_epoch_30.pth.
2022-07-28 03:13:18,363 - mmpose - INFO - Best PCKh is 76.8124 at 30 epoch.
2022-07-28 03:13:18,363 - mmpose - INFO - Epoch(val) [30][24]	Head: 91.8145, Shoulder: 90.6250, Elbow: 77.2287, Wrist: 65.0540, Hip: 81.9976, Knee: 65.9676, Ankle: 55.2899, PCKh: 76.8124, PCKh@0.1: 16.1827
2022-07-28 03:13:41,382 - mmpose - INFO - Epoch [31][50/87]	lr: 5.000e-04, eta: 1:11:35, time: 0.460, data_time: 0.187, memory: 1599, reg_loss: -102.6058, 0: -102.6296, 1: 0.0238, acc_pose: 0.7386, loss: -102.6058
2022-07-28 03:14:18,002 - mmpose - INFO - Epoch [32][50/87]	lr: 5.000e-04, eta: 1:11:04, time: 0.453, data_time: 0.195, memory: 1599, reg_loss: -103.2409, 0: -103.2645, 1: 0.0236, acc_pose: 0.7404, loss: -103.2409
2022-07-28 03:14:54,456 - mmpose - INFO - Epoch [33][50/87]	lr: 5.000e-04, eta: 1:10:32, time: 0.449, data_time: 0.210, memory: 1599, reg_loss: -103.4633, 0: -103.4870, 1: 0.0237, acc_pose: 0.7431, loss: -103.4633
2022-07-28 03:15:32,178 - mmpose - INFO - Epoch [34][50/87]	lr: 5.000e-04, eta: 1:10:06, time: 0.469, data_time: 0.166, memory: 1599, reg_loss: -103.9009, 0: -103.9245, 1: 0.0236, acc_pose: 0.7503, loss: -103.9009
2022-07-28 03:16:09,306 - mmpose - INFO - Epoch [35][50/87]	lr: 5.000e-04, eta: 1:09:38, time: 0.461, data_time: 0.305, memory: 1599, reg_loss: -103.6376, 0: -103.6612, 1: 0.0236, acc_pose: 0.7479, loss: -103.6376
2022-07-28 03:16:46,862 - mmpose - INFO - Epoch [36][50/87]	lr: 5.000e-04, eta: 1:09:10, time: 0.459, data_time: 0.121, memory: 1599, reg_loss: -104.2903, 0: -104.3136, 1: 0.0233, acc_pose: 0.7542, loss: -104.2903
2022-07-28 03:17:23,889 - mmpose - INFO - Epoch [37][50/87]	lr: 5.000e-04, eta: 1:08:41, time: 0.452, data_time: 0.189, memory: 1599, reg_loss: -104.5223, 0: -104.5454, 1: 0.0231, acc_pose: 0.7483, loss: -104.5223
2022-07-28 03:18:01,207 - mmpose - INFO - Epoch [38][50/87]	lr: 5.000e-04, eta: 1:08:13, time: 0.457, data_time: 0.335, memory: 1599, reg_loss: -104.5573, 0: -104.5806, 1: 0.0233, acc_pose: 0.7551, loss: -104.5573
2022-07-28 03:18:38,808 - mmpose - INFO - Epoch [39][50/87]	lr: 5.000e-04, eta: 1:07:48, time: 0.470, data_time: 0.196, memory: 1599, reg_loss: -105.0373, 0: -105.0606, 1: 0.0233, acc_pose: 0.7494, loss: -105.0373
2022-07-28 03:19:15,992 - mmpose - INFO - Epoch [40][50/87]	lr: 5.000e-04, eta: 1:07:21, time: 0.459, data_time: 0.371, memory: 1599, reg_loss: -105.2206, 0: -105.2437, 1: 0.0231, acc_pose: 0.7571, loss: -105.2206
2022-07-28 03:19:30,174 - mmpose - INFO - Saving checkpoint at 40 epochs
2022-07-28 03:19:34,922 - mmpose - INFO - The previous best checkpoint /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc/best_PCKh_epoch_30.pth was removed
2022-07-28 03:19:34,993 - mmpose - INFO - Now best checkpoint is saved as best_PCKh_epoch_40.pth.
2022-07-28 03:19:34,993 - mmpose - INFO - Best PCKh is 78.0146 at 40 epoch.
2022-07-28 03:19:34,993 - mmpose - INFO - Epoch(val) [40][24]	Head: 93.0082, Shoulder: 91.2364, Elbow: 77.6719, Wrist: 66.9398, Hip: 82.3784, Knee: 68.3463, Ankle: 57.6749, PCKh: 78.0146, PCKh@0.1: 16.5235
2022-07-28 03:19:57,402 - mmpose - INFO - Epoch [41][50/87]	lr: 5.000e-04, eta: 1:06:52, time: 0.448, data_time: 0.361, memory: 1599, reg_loss: -104.9167, 0: -104.9398, 1: 0.0231, acc_pose: 0.7565, loss: -104.9167
2022-07-28 03:20:34,295 - mmpose - INFO - Epoch [42][50/87]	lr: 5.000e-04, eta: 1:06:25, time: 0.460, data_time: 0.234, memory: 1599, reg_loss: -104.5561, 0: -104.5793, 1: 0.0231, acc_pose: 0.7558, loss: -104.5561
2022-07-28 03:21:11,290 - mmpose - INFO - Epoch [43][50/87]	lr: 5.000e-04, eta: 1:05:58, time: 0.457, data_time: 0.358, memory: 1599, reg_loss: -105.9040, 0: -105.9270, 1: 0.0230, acc_pose: 0.7547, loss: -105.9040
2022-07-28 03:21:48,467 - mmpose - INFO - Epoch [44][50/87]	lr: 5.000e-04, eta: 1:05:31, time: 0.454, data_time: 0.357, memory: 1599, reg_loss: -105.4237, 0: -105.4465, 1: 0.0228, acc_pose: 0.7577, loss: -105.4237
2022-07-28 03:22:25,265 - mmpose - INFO - Epoch [45][50/87]	lr: 5.000e-04, eta: 1:05:04, time: 0.456, data_time: 0.333, memory: 1599, reg_loss: -104.9350, 0: -104.9582, 1: 0.0231, acc_pose: 0.7540, loss: -104.9350
2022-07-28 03:23:01,940 - mmpose - INFO - Epoch [46][50/87]	lr: 5.000e-04, eta: 1:04:38, time: 0.458, data_time: 0.155, memory: 1599, reg_loss: -105.4288, 0: -105.4517, 1: 0.0230, acc_pose: 0.7561, loss: -105.4288
2022-07-28 03:23:39,187 - mmpose - INFO - Epoch [47][50/87]	lr: 5.000e-04, eta: 1:04:14, time: 0.470, data_time: 0.292, memory: 1599, reg_loss: -106.1629, 0: -106.1856, 1: 0.0227, acc_pose: 0.7615, loss: -106.1629
2022-07-28 03:24:15,849 - mmpose - INFO - Epoch [48][50/87]	lr: 5.000e-04, eta: 1:03:48, time: 0.458, data_time: 0.238, memory: 1599, reg_loss: -106.0989, 0: -106.1216, 1: 0.0227, acc_pose: 0.7566, loss: -106.0989
2022-07-28 03:24:52,654 - mmpose - INFO - Epoch [49][50/87]	lr: 5.000e-04, eta: 1:03:23, time: 0.462, data_time: 0.170, memory: 1599, reg_loss: -106.9020, 0: -106.9245, 1: 0.0224, acc_pose: 0.7588, loss: -106.9020
2022-07-28 03:25:29,302 - mmpose - INFO - Epoch [50][50/87]	lr: 5.000e-04, eta: 1:02:57, time: 0.454, data_time: 0.273, memory: 1599, reg_loss: -106.0979, 0: -106.1206, 1: 0.0227, acc_pose: 0.7624, loss: -106.0979
2022-07-28 03:25:42,950 - mmpose - INFO - Saving checkpoint at 50 epochs
2022-07-28 03:26:05,995 - mmpose - INFO - The previous best checkpoint /data/tfj/workspace/python_projects/pose/mmpose0270/work_dirs/29_reg_shufflenetv2_mpii_256x256_dsnt_rle_highres_simc/best_PCKh_epoch_40.pth was removed
2022-07-28 03:26:06,075 - mmpose - INFO - Now best checkpoint is saved as best_PCKh_epoch_50.pth.
2022-07-28 03:26:06,075 - mmpose - INFO - Best PCKh is 78.0978 at 50 epoch.
2022-07-28 03:26:06,076 - mmpose - INFO - Epoch(val) [50][24]	Head: 92.2578, Shoulder: 91.2364, Elbow: 78.1150, Wrist: 67.0930, Hip: 82.6899, Knee: 68.3454, Ankle: 57.9109, PCKh: 78.0978, PCKh@0.1: 17.2235
2022-07-28 03:26:29,000 - mmpose - INFO - Epoch [51][50/87]	lr: 5.000e-04, eta: 1:02:31, time: 0.458, data_time: 0.177, memory: 1599, reg_loss: -106.7391, 0: -106.7618, 1: 0.0226, acc_pose: 0.7525, loss: -106.7391
2022-07-28 03:27:05,369 - mmpose - INFO - Epoch [52][50/87]	lr: 5.000e-04, eta: 1:02:05, time: 0.453, data_time: 0.263, memory: 1599, reg_loss: -106.2045, 0: -106.2271, 1: 0.0226, acc_pose: 0.7636, loss: -106.2045
2022-07-28 03:27:41,472 - mmpose - INFO - Epoch [53][50/87]	lr: 5.000e-04, eta: 1:01:38, time: 0.444, data_time: 0.164, memory: 1599, reg_loss: -106.9130, 0: -106.9355, 1: 0.0224, acc_pose: 0.7601, loss: -106.9130
2022-07-28 03:28:18,558 - mmpose - INFO - Epoch [54][50/87]	lr: 5.000e-04, eta: 1:01:11, time: 0.449, data_time: 0.348, memory: 1599, reg_loss: -106.6488, 0: -106.6713, 1: 0.0225, acc_pose: 0.7683, loss: -106.6488
2022-07-28 03:28:55,378 - mmpose - INFO - Epoch [55][50/87]	lr: 5.000e-04, eta: 1:00:46, time: 0.454, data_time: 0.283, memory: 1599, reg_loss: -106.7433, 0: -106.7657, 1: 0.0224, acc_pose: 0.7698, loss: -106.7433
