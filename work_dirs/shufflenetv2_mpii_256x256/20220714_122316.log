2022-07-14 12:23:16,227 - mmpose - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.7 (default, Sep 16 2021, 13:09:58) [GCC 7.5.0]
CUDA available: True
GPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda-11.1
NVCC: Cuda compilation tools, release 11.1, V11.1.74
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.9.1+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.10.1+cu111
OpenCV: 4.5.5
MMCV: 1.5.1
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 11.1
MMPose: 0.27.0+
------------------------------------------------------------

2022-07-14 12:23:16,228 - mmpose - INFO - Distributed training: False
2022-07-14 12:23:24,963 - mmpose - INFO - Config:
checkpoint_config = dict(interval=10)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
log_level = 'INFO'
load_from = None
resume_from = None
dist_params = dict(backend='nccl')
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
dataset_info = dict(
    dataset_name='mpii',
    paper_info=dict(
        author=
        'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
        title=
        '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
        container=
        'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
        year='2014',
        homepage='http://human-pose.mpi-inf.mpg.de/'),
    keypoint_info=dict({
        0:
        dict(
            name='right_ankle',
            id=0,
            color=[255, 128, 0],
            type='lower',
            swap='left_ankle'),
        1:
        dict(
            name='right_knee',
            id=1,
            color=[255, 128, 0],
            type='lower',
            swap='left_knee'),
        2:
        dict(
            name='right_hip',
            id=2,
            color=[255, 128, 0],
            type='lower',
            swap='left_hip'),
        3:
        dict(
            name='left_hip',
            id=3,
            color=[0, 255, 0],
            type='lower',
            swap='right_hip'),
        4:
        dict(
            name='left_knee',
            id=4,
            color=[0, 255, 0],
            type='lower',
            swap='right_knee'),
        5:
        dict(
            name='left_ankle',
            id=5,
            color=[0, 255, 0],
            type='lower',
            swap='right_ankle'),
        6:
        dict(name='pelvis', id=6, color=[51, 153, 255], type='lower', swap=''),
        7:
        dict(name='thorax', id=7, color=[51, 153, 255], type='upper', swap=''),
        8:
        dict(
            name='upper_neck',
            id=8,
            color=[51, 153, 255],
            type='upper',
            swap=''),
        9:
        dict(
            name='head_top', id=9, color=[51, 153, 255], type='upper',
            swap=''),
        10:
        dict(
            name='right_wrist',
            id=10,
            color=[255, 128, 0],
            type='upper',
            swap='left_wrist'),
        11:
        dict(
            name='right_elbow',
            id=11,
            color=[255, 128, 0],
            type='upper',
            swap='left_elbow'),
        12:
        dict(
            name='right_shoulder',
            id=12,
            color=[255, 128, 0],
            type='upper',
            swap='left_shoulder'),
        13:
        dict(
            name='left_shoulder',
            id=13,
            color=[0, 255, 0],
            type='upper',
            swap='right_shoulder'),
        14:
        dict(
            name='left_elbow',
            id=14,
            color=[0, 255, 0],
            type='upper',
            swap='right_elbow'),
        15:
        dict(
            name='left_wrist',
            id=15,
            color=[0, 255, 0],
            type='upper',
            swap='right_wrist')
    }),
    skeleton_info=dict({
        0:
        dict(link=('right_ankle', 'right_knee'), id=0, color=[255, 128, 0]),
        1:
        dict(link=('right_knee', 'right_hip'), id=1, color=[255, 128, 0]),
        2:
        dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
        3:
        dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
        4:
        dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
        5:
        dict(link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
        6:
        dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
        7:
        dict(link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
        8:
        dict(link=('upper_neck', 'head_top'), id=8, color=[51, 153, 255]),
        9:
        dict(link=('upper_neck', 'right_shoulder'), id=9, color=[255, 128, 0]),
        10:
        dict(
            link=('right_shoulder', 'right_elbow'), id=10, color=[255, 128,
                                                                  0]),
        11:
        dict(link=('right_elbow', 'right_wrist'), id=11, color=[255, 128, 0]),
        12:
        dict(link=('upper_neck', 'left_shoulder'), id=12, color=[0, 255, 0]),
        13:
        dict(link=('left_shoulder', 'left_elbow'), id=13, color=[0, 255, 0]),
        14:
        dict(link=('left_elbow', 'left_wrist'), id=14, color=[0, 255, 0])
    }),
    joint_weights=[
        1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2, 1.0, 1.0,
        1.2, 1.5
    ],
    sigmas=[
        0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026, 0.026,
        0.062, 0.072, 0.179, 0.179, 0.072, 0.062
    ])
evaluation = dict(interval=10, metric='PCKh', save_best='PCKh')
optimizer = dict(type='Adam', lr=0.0005)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[170, 200])
total_epochs = 210
channel_cfg = dict(
    num_output_channels=16,
    dataset_joints=16,
    dataset_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    inference_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
model = dict(
    type='TopDown',
    pretrained='mmcls://shufflenet_v2',
    backbone=dict(type='ShuffleNetV2', widen_factor=1.0),
    keypoint_head=dict(
        type='TopdownHeatmapSimpleHead',
        in_channels=1024,
        out_channels=16,
        loss_keypoint=dict(type='JointsMSELoss', use_target_weight=True),
        is_dsnt=False),
    train_cfg=dict(),
    test_cfg=dict(
        flip_test=True,
        post_process='default',
        shift_heatmap=True,
        modulate_kernel=11))
data_cfg = dict(
    image_size=[256, 256],
    heatmap_size=[64, 64],
    num_output_channels=16,
    num_joints=16,
    dataset_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    inference_channel=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    use_gt_bbox=True,
    bbox_file=None)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownRandomFlip', flip_prob=0.5),
    dict(
        type='TopDownGetRandomScaleRotation', rot_factor=40, scale_factor=0.5),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(type='TopDownGenerateTarget', sigma=2),
    dict(
        type='Collect',
        keys=['img', 'target', 'target_weight'],
        meta_keys=[
            'image_file', 'joints_3d', 'joints_3d_visible', 'center', 'scale',
            'rotation', 'flip_pairs'
        ])
]
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='Collect',
        keys=['img'],
        meta_keys=['image_file', 'center', 'scale', 'rotation', 'flip_pairs'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='TopDownGetBboxCenterScale', padding=1.25),
    dict(type='TopDownAffine'),
    dict(type='ToTensor'),
    dict(
        type='NormalizeTensor',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='Collect',
        keys=['img'],
        meta_keys=['image_file', 'center', 'scale', 'rotation', 'flip_pairs'])
]
data_root = '/data/tfj/workspace/datasets/MPII'
data = dict(
    samples_per_gpu=64,
    workers_per_gpu=2,
    persistent_workers=True,
    val_dataloader=dict(samples_per_gpu=32),
    test_dataloader=dict(samples_per_gpu=32),
    train=dict(
        type='TopDownMpiiDataset',
        ann_file=
        '/data/tfj/workspace/datasets/MPII/annotations/mpii_train.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownRandomFlip', flip_prob=0.5),
            dict(
                type='TopDownGetRandomScaleRotation',
                rot_factor=40,
                scale_factor=0.5),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='TopDownGenerateTarget', sigma=2),
            dict(
                type='Collect',
                keys=['img', 'target', 'target_weight'],
                meta_keys=[
                    'image_file', 'joints_3d', 'joints_3d_visible', 'center',
                    'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])),
    val=dict(
        type='TopDownMpiiDataset',
        ann_file='/data/tfj/workspace/datasets/MPII/annotations/mpii_val.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='Collect',
                keys=['img'],
                meta_keys=[
                    'image_file', 'center', 'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])),
    test=dict(
        type='TopDownMpiiDataset',
        ann_file='/data/tfj/workspace/datasets/MPII/annotations/mpii_val.json',
        img_prefix='/data/tfj/workspace/datasets/MPII/images/',
        data_cfg=dict(
            image_size=[256, 256],
            heatmap_size=[64, 64],
            num_output_channels=16,
            num_joints=16,
            dataset_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            inference_channel=[
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
            ],
            use_gt_bbox=True,
            bbox_file=None),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='TopDownGetBboxCenterScale', padding=1.25),
            dict(type='TopDownAffine'),
            dict(type='ToTensor'),
            dict(
                type='NormalizeTensor',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(
                type='Collect',
                keys=['img'],
                meta_keys=[
                    'image_file', 'center', 'scale', 'rotation', 'flip_pairs'
                ])
        ],
        dataset_info=dict(
            dataset_name='mpii',
            paper_info=dict(
                author=
                'Mykhaylo Andriluka and Leonid Pishchulin and Peter Gehler and Schiele, Bernt',
                title=
                '2D Human Pose Estimation: New Benchmark and State of the Art Analysis',
                container=
                'IEEE Conference on Computer Vision and Pattern Recognition (CVPR)',
                year='2014',
                homepage='http://human-pose.mpi-inf.mpg.de/'),
            keypoint_info=dict({
                0:
                dict(
                    name='right_ankle',
                    id=0,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_ankle'),
                1:
                dict(
                    name='right_knee',
                    id=1,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_knee'),
                2:
                dict(
                    name='right_hip',
                    id=2,
                    color=[255, 128, 0],
                    type='lower',
                    swap='left_hip'),
                3:
                dict(
                    name='left_hip',
                    id=3,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_hip'),
                4:
                dict(
                    name='left_knee',
                    id=4,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_knee'),
                5:
                dict(
                    name='left_ankle',
                    id=5,
                    color=[0, 255, 0],
                    type='lower',
                    swap='right_ankle'),
                6:
                dict(
                    name='pelvis',
                    id=6,
                    color=[51, 153, 255],
                    type='lower',
                    swap=''),
                7:
                dict(
                    name='thorax',
                    id=7,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                8:
                dict(
                    name='upper_neck',
                    id=8,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                9:
                dict(
                    name='head_top',
                    id=9,
                    color=[51, 153, 255],
                    type='upper',
                    swap=''),
                10:
                dict(
                    name='right_wrist',
                    id=10,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_wrist'),
                11:
                dict(
                    name='right_elbow',
                    id=11,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_elbow'),
                12:
                dict(
                    name='right_shoulder',
                    id=12,
                    color=[255, 128, 0],
                    type='upper',
                    swap='left_shoulder'),
                13:
                dict(
                    name='left_shoulder',
                    id=13,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_shoulder'),
                14:
                dict(
                    name='left_elbow',
                    id=14,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_elbow'),
                15:
                dict(
                    name='left_wrist',
                    id=15,
                    color=[0, 255, 0],
                    type='upper',
                    swap='right_wrist')
            }),
            skeleton_info=dict({
                0:
                dict(
                    link=('right_ankle', 'right_knee'),
                    id=0,
                    color=[255, 128, 0]),
                1:
                dict(
                    link=('right_knee', 'right_hip'),
                    id=1,
                    color=[255, 128, 0]),
                2:
                dict(link=('right_hip', 'pelvis'), id=2, color=[255, 128, 0]),
                3:
                dict(link=('pelvis', 'left_hip'), id=3, color=[0, 255, 0]),
                4:
                dict(link=('left_hip', 'left_knee'), id=4, color=[0, 255, 0]),
                5:
                dict(
                    link=('left_knee', 'left_ankle'), id=5, color=[0, 255, 0]),
                6:
                dict(link=('pelvis', 'thorax'), id=6, color=[51, 153, 255]),
                7:
                dict(
                    link=('thorax', 'upper_neck'), id=7, color=[51, 153, 255]),
                8:
                dict(
                    link=('upper_neck', 'head_top'),
                    id=8,
                    color=[51, 153, 255]),
                9:
                dict(
                    link=('upper_neck', 'right_shoulder'),
                    id=9,
                    color=[255, 128, 0]),
                10:
                dict(
                    link=('right_shoulder', 'right_elbow'),
                    id=10,
                    color=[255, 128, 0]),
                11:
                dict(
                    link=('right_elbow', 'right_wrist'),
                    id=11,
                    color=[255, 128, 0]),
                12:
                dict(
                    link=('upper_neck', 'left_shoulder'),
                    id=12,
                    color=[0, 255, 0]),
                13:
                dict(
                    link=('left_shoulder', 'left_elbow'),
                    id=13,
                    color=[0, 255, 0]),
                14:
                dict(
                    link=('left_elbow', 'left_wrist'),
                    id=14,
                    color=[0, 255, 0])
            }),
            joint_weights=[
                1.5, 1.2, 1.0, 1.0, 1.2, 1.5, 1.0, 1.0, 1.0, 1.0, 1.5, 1.2,
                1.0, 1.0, 1.2, 1.5
            ],
            sigmas=[
                0.089, 0.083, 0.107, 0.107, 0.083, 0.089, 0.026, 0.026, 0.026,
                0.026, 0.062, 0.072, 0.179, 0.179, 0.072, 0.062
            ])))
work_dir = './work_dirs/shufflenetv2_mpii_256x256'
gpu_ids = [4]

2022-07-14 12:23:24,965 - mmpose - INFO - Set random seed to 2526, deterministic: False
